@using Microsoft.AspNetCore.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<nav id="navbar" class="nav">
    <div class="nav_content">
        @*Logo*@
        <a class="nav_logo nav_link" asp-area="" asp-controller="Home" asp-action="Index">
            BugTracker
        </a>

        @*Auth + Profile*@
        <ul class="nav_list">
            @if (SignInManager.IsSignedIn(User))
            {
                AppUser user = UserManager.Users.FirstOrDefault(u => u.Id == UserManager.GetUserId(User));
                string fullName = user.FullName;

                <li class="nav_item">Hi @fullName!</li>
                <li class="nav_item">
                    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button id="logout" type="submit" class="nav-button">Logout</button>
                    </form>
                </li>
            }
            else
            {
                <li class="nav_item">
                    <a class="nav_link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
                </li>
                <li class="nav_item">
                    <a class="nav_link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
                </li>
            }

            <div class="nav_item">
                <a class="nav_link avatar" id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">M</a>
            </div>
        </ul>
    </div>
</nav>